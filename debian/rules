#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)


#CFLAGS = -Wall -g
CFLAGS = -Wall

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

# shared library versions, option 1
#version=1.1.0
#major=1
# option 2, assuming the library is created as build/src/libfoo.so.2.0.5 or so
version=`find . -name liborocos-rtt.*.so.* | head -1 | awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
major=`find . -name liborocos-rtt.*.so.* | awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

configure: configure-stamp
configure-stamp:
	dh_testdir
# Add here commands to configure the package.
# LDFLAGS="-Wl,-z,defs"
	mkdir -p build.lxrt
	cd build.lxrt; \
	unset ACE_ROOT TAO_ROOT; CXXFLAGS="$(CFLAGS)" ../configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --enable-corba --enable-static --with-lxrt=/usr/realtime

	mkdir -p build.gnulinux
	cd  build.gnulinux; \
	unset ACE_ROOT TAO_ROOT; CXXFLAGS="$(CFLAGS)" ../configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --enable-corba --enable-static --with-gnulinux

	mkdir -p build.xenomai
	cd build.xenomai; \
	unset ACE_ROOT TAO_ROOT; CXXFLAGS="$(CFLAGS)" ../configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --enable-corba --enable-static --with-xenomai=/usr
	touch configure-stamp

# Keeps our makefile dependencies ok:
#	mkdir -p build
#	touch build/Makefile

build: build-stamp
build-stamp: configure-stamp
	dh_testdir

# Add here commands to compile the package.
	cd build.lxrt; $(MAKE) idl ;$(MAKE) $(MAKE_FLAGS); 
	cd build.gnulinux; $(MAKE) idl ;$(MAKE) $(MAKE_FLAGS); # $(MAKE) docapi dochtml VERBOSE=1
	cd build.xenomai; $(MAKE) idl ;$(MAKE) $(MAKE_FLAGS); 

	touch build-stamp

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	rm -f configure-stamp

# Add here commands to clean up after the build process.
	-rm -rf build*

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

# Each flavor installs in debian/tmp/flavor. Be sure to edit package.install
# such that the flavor is stripped when building the package.
	cd build.gnulinux; $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp
	cd build.lxrt; $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp
	cd build.xenomai; $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
	dh_install --sourcedir=debian/tmp --list-missing
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
