<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
<!ENTITY cvs         "<acronym>CVS</acronym>">
<!ENTITY orocos      "<acronym>Orocos</acronym>">
<!ENTITY oldversion  "1.4">
<!ENTITY version     "1.6">
<!ENTITY rtai        "<acronym>RTAI</acronym>">
<!ENTITY rtos        "<acronym>RTOS</acronym>">
]
>

<article>
  <articleinfo>
    <title>
      Orocos Real-Time Toolkit &version; Release Series
      Changes, New Features, and Fixes 
    </title>
    <subtitle><emphasis>Open RObot COntrol Software</emphasis>
    </subtitle>
  </articleinfo>
  <para>
    This document provides a quick overview of what changed between
    the Real-Time Toolkit &oldversion; and version &version;. This
    release includes all bugfixes of the &oldversion; branch. If your
    application does not work with this release, look here for
    possible causes and solutions. Also feature additions and
    improvements are documented.
  </para>
  <para>
    The <ulink
    url="http://svn.mech.kuleuven.be/websvn/orocos/trunk/rtt/?op=log&amp;max=150&amp;">complete
    changelog</ulink> is available as well.
  </para>
  <section id="caveats">
    <title>Caveats</title>
    <itemizedlist>
      <listitem>
	<para>
	  This release is binary incompatible with RTT
	  &oldversion;.x. You need to recompile all your applications
	  in order to upgrade to this release.
	</para>
      </listitem>
      <listitem>
	<para> The <classname>RTT::AnalogInInterface</classname>,
	<classname>RTT::AnalogOutInterface</classname>
	<classname>RTT::AnalogInput</classname> and
	<classname>RTT::AnalogOutput</classname> classes have a
	slightly changed interface. This makes them incompatible with
	RTT 1.4 and older. The template parameter has been dropped
	and the default 'raw' value is now <option>int</option>. In this
	way, two's complement and unsigned A/D converters are supported
	upto 31 bits. This change did also change the Comedi API in OCL,
	see below.
	</para>
	<para>
	  See also
	  <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=488">
	    AnalogIn/OutInterface is an atrocity.
	    </ulink>.
	</para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Improvements</title>
    <section>
      <title>Scripting</title>
      <itemizedlist>
	<listitem>
	  <para>
	    Scripting now supports automatic type converions. This
	    means you can provide an integer argument where a double
	    is expected and vice verse. The 'C++ style cast' is supported
	    as well. One can write for example
	    <programlisting>var int i = int(3.456); // i == 3</programlisting>
	    Conversions that reduce precision will print a Logger warning during
	    parsing, unless this explicit cast is used.
	  </para>
	<para>
	  See also
	  <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=516">
	    [Scripting]No conversions available from int -> double ->...
	    </ulink>.
	</para>
	</listitem>
	<listitem>
	  <para>
	    Scripting now also supports the C 'float' type. You can now write
	    <programlisting>var float f = 10.0f;</programlisting>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Event based transitions in statemachines are now always
	    asynchronous and can be received during the entry and run
	    programs. State machines can react immediately in the same
	    state to events emited in the entry program.  Events
	    emited in the run program can only be processed in the next
	    execution step of the state machine.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Event transitions in statemachines can now be written more
	    naturally.  The if and select statements are optional when
	    a transition program is given. For example:
	    <programlisting>  transition some_event(a) { do foo(a); }
  transition some_event(a) if (a &lt; 10.0) then { do foo(a); }
	    </programlisting>
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=544">
	         Unable have event transition with no select statements
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The transition syntax has been unified. One can write both condition
	    and event transitions in transitions blocks or with the keyword
	    transition. For example:
	    <programlisting>  transition if (a &lt; 10.0) { do foo(a); }
  transitions {
      some_event(a) if (a &lt; 10.0) then { do foo(a); }
      // ... repeat
  }</programlisting>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Both condition and event transitions can be specified at the
	    top level of a state machine. These 'global' transitions apply
	    to any state of that state machine and are evaluated after
	    the transitions of the current state.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>OS Abstraction</title>
      <itemizedlist>
	<listitem>
	  <para>
	    An initial Max OSX port has been done, and stable enough for broader testing.
	    If you like to contribute, see
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=533">
	      Mac OS X port
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The main() function has been removed from the Orocos
	    library and is now a macro that expands in user code. This
	    greatly improves debugging, as some (most) debuggers don't
	    look in libraries for the main() function.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>RTT classes</title>
      <itemizedlist>
	<listitem>
	  <para>
	    The <classname>RTT::DataPort</classname> and
	    <classname>RTT::BufferPort</classname> classes and base
	    classes have been refactored for lower code size and
	    faster execution. This change is backwards compatible,
	    except for the (internal)
	    <function>createConnection(PortInterface*)</function>
	    function, which has disappeared. Use
	    <function>connectTo(PortInterface*)</function> instead.
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=527">
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    It is now possible to load <emphasis>new</emphasis>
	    Properties from XML files into a TaskContext. This is done
	    using the <function>loadProperties()</function> function,
	    available in the C++ MarshallingAccess interface and also
	    in the scripting interface. This allows to load new parameters
	    into a component, even after it was compiled. You can use this
	    to provide extra parameters to (multiple) scripts for example.
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=512">
	      [Project] Allow to load extra properties from file in a TaskContext
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The <classname>RTT::TaskContext</classname> interface classes
	    (commands, methods, events, properties,...) now all have a
	    <function>remove...()</function> function to selectively remove
	    elements from the interface again.
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=524">
	      Method-Command repositories do not have removeX
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The <classname>RTT::Logger</classname> class has been restored
	    to correctly log the [Location] tag after recursing into functions.
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=545">
	         Logger In() instances do not nest correctly 
	      </ulink>.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Corba Support</title>
      <itemizedlist>
	<listitem>
	  <para>
	    CORBA DataPorts have been thoroughly tested and fixed.
	    They now respect connection direction and can also be connected
	    using only the IDL interface. Also, the ports disconnect
	    automatically when a remote connection no longer exists, making
	    it free again to setup a new connection.
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=532">
	      Corba Data/Buffer ports do not respect connection direction
	      </ulink>.
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=527">
	      Can not connect ports using only IDL interface
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Completely transparant Method and Command invocation in
	    C++ on remote CORBA TaskContexts has been added (this was 
	    already available in the scripting interface). This
	    feature however increases code size, even if CORBA is not
	    used. A CMake variable ORO_REMOTING has been defined which
	    allows to turn this feature off. It is enabled by default
	    if you build the RTT with the CORBA protocol library.
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=520">
	      getMethod&lt;...&gt;("name") does not work for remote/CORBA components
	      </ulink>.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
  </section>
  <section>
    <title>Orocos Component Library</title>
    <section>
      <title>Caveats</title>
      <itemizedlist>
	<listitem>
	  <para>
	    This release is binary incompatible with OCL
	    &oldversion;.x. You need to recompile all your applications
	    in order to upgrade to this release.
	  </para>
	</listitem>
	<listitem>
	  <para>The Comedi API in OCL has changed to the API of the new
	  RTT base classes.  Also, Comedi classes moved from
	  the RTT to the OCL namespace. 
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=488">
	      AnalogIn/OutInterface is an atrocity.
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para>The ComediPulseTrainGenerator and ComediEncoder
	  classes (previously only compatible with a patched version
	  of Comedi) have been rewritten such that they now use the
	  ComediLib 0.8 API. This also caused a change in the
	  ComediPulseTrainGenerator constructor:  the subdevice
	  specifies the counter to be used (starting from '2') and the channel parameter
	  has been dropped. 
	  </para>
	  <para>
	    See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=542">
	      Comedi layer is lagging behind comedi releases
	      </ulink>.
	  </para>
	</listitem>
	<listitem>
	  <para> The <classname>RTT::Axis</classname> and related
	  classes from the OCL hardware package have been moved to the
	  <classname>OCL</classname> namespace.
	  </para>
	  <para> See also
	    <ulink url="https://www.fmtc.be/bugzilla/orocos/show_bug.cgi?id=571">
	      hardware/axes/dev classes should not be RTT namespace.
	      </ulink>.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Improvements</title>
      <itemizedlist>
	<listitem>
	  <para>
	    Orocos better intercepts lost connections to remote TaskContexts.
	    The Orocos Component Library's deployer and taskbrowser use
	    this infrastructure to detect and cope with lost connections.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The OCL CORBA deployer can now create CORBA servers and
	    CORBA proxies for any component type. When a local
	    component is created, one can set the boolean
	    <option>Server</option> property to 1, in which case it is
	    exported as a ControlTask CORBA server using the naming
	    service.  If the naming service is not available, set the
	    boolean property <option>UseNamingService</option> to 0. In that
	    case, an IOR file is generated. The <function>server()</function>
	    method of the deployer adds the same functionality in the
	    scripting interface.
	  </para>
	  <para>
	    CORBA proxies can be created in three ways: by using the
	    naming service, by using an IOR file or by specifying the IOR
	    literally. This is done by specifying the 'type' field of the component
	    as "CORBA", "IORFile" or "IOR" and providing the registered name,
	    IOR file location or IOR respectively in the 'name' field.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The <option>AutoConnect</option> feature of the deployer
	    now also works across distributed components, provided
	    that both components have the AutoConnect option set in
	    the XML configuration and that one is known as a peer to
	    the other.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    An <option>Include</option> feature has been added to
	    the deployer's XML file syntax. This directive allows to
	    include another XML file in place such that you can better
	    manage multiple XML files or share XML files between users.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The deployer logs improved diagnostics in stopComponents,
	    startComponents,...  family of functions.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The deployer does 'spell' checking for unknown or misspelled
	    XML 'name' attributes, which goes further than the standard
	    XML syntax checking.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The taskbrowser can be compiled with the -DNO_GPL flag
	    such that it does not contain any GPL'ed code. This flag
	    removes the dependency on the GPL readline
	    library. TAB-completion and history are not available in
	    that case.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
  </section>

  <appendix>
    <title>About Orocos</title>
    <para>
      Please send your Orocos questions to <ulink
	url="mailto: orocos-users at lists.mech.kuleuven.be">
	orocos-users at lists.mech.kuleuven.be </ulink>. 
    </para>
    <para>
      These pages are maintained by <ulink
	url="http://www.orocos.org/orocos/whatis">the Orocos
	team</ulink>.
    </para>
    <para>
      For questions related to the use of the Orocos Software, please consult these
      web pages and the <ulink
	url="http://www.orocos.org/rtt">Orocos RTT manuals</ulink>. If
      that fails, the  <ulink
	url="mailto:orocos-dev at lists.mech.kuleuven.be">
	orocos-dev at lists.mech.kuleuven.be </ulink> mailing list might help.
      Please
      send comments on these web pages and the development of Orocos to
      our developer mailing list at  <ulink
	url="mailto:orocos-dev at lists.mech.kuleuven.be">
	orocos-dev at lists.mech.kuleuven.be </ulink>. All of
      our lists have <ulink url="http://lists.mech.kuleuven.be/mailman/listinfo/orocos-users">public
	archives</ulink> ( <ulink url="http://lists.mech.kuleuven.be/mailman/listinfo/orocos-dev"> dev public
	archive</ulink> ) .
      </para>
    <para>
      Copyright (C) FMTC
    </para>
    <para>
      Verbatim copying and distribution of this entire article is
      permitted in any medium, provided this notice is preserved.
    </para>
  </appendix>
</article>
