diff -u -r1.55 rtai_lxrt.h
--- include/rtai_lxrt.h	22 May 2003 13:32:05 -0000	1.55
+++ include/rtai_lxrt.h	3 Jul 2003 13:02:52 -0000
@@ -1455,13 +1455,13 @@
 	return rtai_lxrt(BIDX, SIZARG, COND_WAIT, &arg).i[LOW];
 }
 
-DECLARE int rt_cond_wait_until(CND cond, SEM *mutex, RTIME time)
+DECLARE int rt_cond_wait_until(CND *cond, SEM *mutex, RTIME time)
 {
 	struct { CND *cond; SEM *mutex; RTIME time; } arg = { cond, mutex, time };
 	return rtai_lxrt(BIDX, SIZARG, COND_WAIT_UNTIL, &arg).i[LOW];
 }
 
-DECLARE int rt_cond_wait_timed(CND cond, SEM *mutex, RTIME delay)
+DECLARE int rt_cond_wait_timed(CND *cond, SEM *mutex, RTIME delay)
 {
 	struct { CND *cond; SEM *mutex; RTIME delay; } arg = { cond, mutex, delay };
 	return rtai_lxrt(BIDX, SIZARG, COND_WAIT_TIMED, &arg).i[LOW];
diff -u -r1.6 rtai_pqueue.h
--- include/rtai_pqueue.h	3 Mar 2003 10:57:29 -0000	1.6
+++ include/rtai_pqueue.h	3 Jul 2003 13:02:52 -0000
@@ -104,7 +104,7 @@
 struct msg_hdr {
     BOOL in_use;
     size_t size;		//Actual message size
-    uint priority;		//Usage priority (message/task)
+    unsigned int priority;		//Usage priority (message/task)
     void *next;			//Pointer to next message on queue
 };
 typedef struct msg_hdr MSG_HDR;
@@ -132,7 +132,7 @@
     int open_count;		//Count of the number of tasks that have
 				// 'opened' the queue for access
     char q_name[MQ_NAME_MAX];	//Name supplied for queue
-    uint q_id;			//Queue Id (index into static list of queues)
+    unsigned int q_id;			//Queue Id (index into static list of queues)
     BOOL marked_for_deletion;	//Queue can be deleted once all tasks have 
 				// closed it	
     Q_CTRL data;		//Data queue (real messages)
diff -u -r1.9 rtai_usp_posix.h
--- include/rtai_usp_posix.h	29 Apr 2003 07:34:23 -0000	1.9
+++ include/rtai_usp_posix.h	3 Jul 2003 13:02:52 -0000
@@ -20,13 +20,19 @@
 #define _RTAI_USP_POSIX_H_
 
 #include <errno.h>
+#include <sys/types.h>
 #include <semaphore.h>
 #include <pthread.h>
 #include <unistd.h>
 #include <fcntl.h>
 #include <signal.h>
 #include <sys/stat.h>
-#include <sys/types.h>
+
+#define new _new
+#include <asm/system.h>
+#undef __init
+#undef mb
+#undef new
 
 #include <asm/atomic.h>
 
@@ -44,10 +50,12 @@
 
 static inline int MAKE_SOFT(void)
 {
-	if (rt_is_hard_real_time(rt_buddy())) {
-		rt_make_soft_real_time();
-		return 1;
-	}
+    RT_TASK* tt = rt_buddy();
+    if (tt)
+        if (rt_is_hard_real_time(tt)) {
+            rt_make_soft_real_time();
+            return 1;
+        }
 	return 0;
 }
 
@@ -248,7 +256,7 @@
 	return mutex;
 }
 
-DECLARE int pthread_mutex_init_rt(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr)
+DECLARE int pthread_mutex_init_rt(pthread_mutex_t *mutex, const pthread_mutexattr_t * mutexattr)
 {
 	int hs;
 	struct { int name, value, type; } arg = { rt_get_name(0), 1, RES_SEM };
@@ -291,7 +299,7 @@
 	return (pthread_cond_t *)sem_open_rt(name, 0, 0, SEM_BINARY);
 }
 
-DECLARE int pthread_cond_init_rt(pthread_cond_t *cond, pthread_condattr_t *cond_attr)
+DECLARE int pthread_cond_init_rt(pthread_cond_t *cond, pthread_condattr_t * cond_attr )
 {
 	return sem_init_rt((sem_t *)cond, SEM_BINARY, 0);
 }
@@ -306,15 +314,13 @@
 	return sem_close_rt((sem_t *)cond);
 }
 
-typedef struct {  unsigned int data[2]; } pthread_barrier_t;
-typedef int pthread_barrierattr_t;
-
+#ifdef __USE_XOPEN2K
 DECLARE pthread_barrier_t *pthread_barrier_open_rt(const char *name, unsigned int count)
 {
 	return (pthread_barrier_t *)sem_open_rt(name, 0, count, 0);
 }
 
-DECLARE int pthread_barrier_init_rt(pthread_barrier_t *barrier, const pthread_barrierattr_t *attr, unsigned int count)
+DECLARE int pthread_barrier_init_rt(pthread_barrier_t *barrier, const pthread_barrierattr_t * attr, unsigned int count)
 {
 	return sem_init_rt((sem_t *)barrier, 0, count);
 }
@@ -329,6 +335,15 @@
 	return sem_close_rt((sem_t *)barrier);
 }
 
+DECLARE int pthread_barrier_wait_rt(pthread_barrier_t *barrier)
+{
+	struct { void *sem; } arg = { ((void **)barrier)[0] };
+	rtai_lxrt(BIDX, SIZARG, SEM_WAIT_BARRIER, &arg);
+	return 0;
+}
+
+#endif //__USE_XOPEN2K
+
 /*
  * DO NOTHING FUNCTIONS (IN RTAI HARD REAL TIME)
  */
@@ -350,17 +365,21 @@
 #define pthread_condattr_getpshared_rt(attr, pshared)
 #define pthread_condattr_setpshared_rt(attr, pshared)
 
+#ifdef __USE_XOPEN2K
 #define pthread_barrierattr_getpshared_rt(attr, pshared)
 #define pthread_barrierattr_setpshared_rt(attr, pshared)
 #define pthread_barrierattr_getpshared_rt(attr, pshared)
 #define pthread_barrierattr_setpshared_rt(attr, pshared)
+#endif /* __USE_XOPEN2K */
 
+#ifdef __USE_UNIX98
 #define pthread_rwlockattr_init(attr)
 #define pthread_rwlockattr_destroy(attr)
 #define pthread_rwlockattr_getpshared( ttr, pshared)
 #define pthread_rwlockattr_setpshared(attr, pshared)
 #define pthread_rwlockattr_getkind_np(attr, pref)
 #define pthread_rwlockattr_setkind_np(attr, pref)
+#endif /* __USE_UNIX98 */
 
 /*
  * FUNCTIONS (LIKELY) SAFELY USABLE IN HARD REAL TIME "AS THEY ARE", 
@@ -411,6 +430,7 @@
 	pthread_setcancelstate(oldstate, &oldstate);
 }
 
+#ifdef __USE_GNU
 DECLARE int pthread_yield_rt(void)
 {
 	if (rt_is_hard_real_time(rt_buddy())) {
@@ -420,6 +440,7 @@
 	}
 	return pthread_yield();
 }
+#endif /* __USE_GNU */
 
 DECLARE void pthread_exit_rt(void *retval)
 {
@@ -516,16 +537,7 @@
 	return rtai_lxrt(BIDX, SIZARG, COND_WAIT_UNTIL, &arg).i[LOW];
 }
 
-DECLARE int pthread_barrier_wait_rt(pthread_barrier_t *barrier)
-{
-	struct { void *sem; } arg = { ((void **)barrier)[0] };
-	rtai_lxrt(BIDX, SIZARG, SEM_WAIT_BARRIER, &arg);
-	return 0;
-}
-
-typedef struct {  unsigned int data[2]; } pthread_rwlock_t;
-#define pthread_rwlockattr_t  int
-
+#ifdef __USE_UNIX98
 DECLARE pthread_rwlock_t *pthread_rwlock_open_rt(const char *name)
 {
 	int hs, fd;
@@ -551,7 +563,7 @@
 	return rwlock;
 }
 
-DECLARE int pthread_rwlock_init_rt(pthread_rwlock_t *rwlock, pthread_rwlockattr_t *attr)
+DECLARE int pthread_rwlock_init_rt(pthread_rwlock_t *rwlock, pthread_rwlockattr_t * attr )
 {
 	int hs;
 	struct { int name; } arg = { rt_get_name(0) };
@@ -636,9 +648,9 @@
 	struct { void *rwlock; } arg = { ((void **)rwlock)[0] };
 	return rtai_lxrt(BIDX, SIZARG, RWL_UNLOCK, &arg).i[LOW];
 }
+#endif /* __USE_UNIX98 */
 
-typedef unsigned long pthread_spinlock_t;
-
+#ifdef __USE_XOPEN2K
 DECLARE int pthread_spin_init_rt(pthread_spinlock_t *lock)
 {
 	return (((int *)lock)[0] = 0);
@@ -667,6 +679,8 @@
 {
 	return ((int *)lock)[0] = 0;
 }
+
+#endif /* __USE_XOPEN2K */
 
 DECLARE void clock_gettime_rt(int clockid, struct timespec *current_time)
 {
diff -u -r1.4 rtai_vectors.h
--- include/asm-i386/rtai_vectors.h	16 Feb 2003 16:48:14 -0000	1.4
+++ include/asm-i386/rtai_vectors.h	3 Jul 2003 13:02:52 -0000
@@ -30,7 +30,7 @@
 #ifndef _asm_rtai_vectors_h
 #define _asm_rtai_vectors_h
 
-#include <config.h>
+#include "rtai/config.h"
 
 #ifdef CONFIG_RTAI_ADEOS
 
diff -u -r1.4 Makefile
--- usposix/Makefile	28 Apr 2003 12:43:10 -0000	1.4
+++ usposix/Makefile	3 Jul 2003 13:02:57 -0000
@@ -1,4 +1,4 @@
-EXTRA_USER_CFLAGS := -I
+EXTRA_USER_CFLAGS := -D_XOPEN_SOURCE=600
 EXTRA_USER_LIBS := -lpthread
 
 A_TARG  = condtest mqtest jepplin rwlocks
diff -u -r1.2 mqtest.c
--- usposix/mqtest.c	3 Mar 2003 11:14:59 -0000	1.2
+++ usposix/mqtest.c	3 Jul 2003 13:02:57 -0000
@@ -39,13 +39,13 @@
 static sem_t sem1, sem2;
 static pthread_barrier_t barrier;
 
-struct Msg { const char *str; int str_size; uint prio; };
+struct Msg { const char *str; int str_size; unsigned int prio; };
 
 void *child_func(void *arg)
 {
 	size_t n = 0;
 	char inBuf[50];
-	uint priority = 0;
+	unsigned int priority = 0;
 	int my_oflags, nMsgs = 0;
 	struct mq_attr my_attrs = { 0, 0, 0, 0};
 	mode_t my_mode = 0;
@@ -116,7 +116,7 @@
 	mode_t my_mode;
 	struct mq_attr my_attrs;
 	char inBuf[50];
-	uint priority = 0;
+	unsigned int priority = 0;
 	static const char str1[] = "Test string number one";
 	static const char str2[] = "This is test string num 2!!";
 	static const char str3[] = "Test string number 3!";
diff -u -r1.1 rwlocks.c
--- usposix/rwlocks.c	28 Apr 2003 12:43:10 -0000	1.1
+++ usposix/rwlocks.c	3 Jul 2003 13:02:57 -0000
@@ -141,6 +141,7 @@
 	pthread_barrier_wait_rt(&barrier);
 	rt_task_delete(task[idx - 1]);
 	DISPLAY("TASK %d EXITED\n", idx);
+    return 0;
 }
 
 int main(void)
diff -u -r1.22 Makefile.modbuild
--- Makefile.modbuild	17 Mar 2003 14:16:09 -0000	1.22
+++ Makefile.modbuild	3 Jul 2003 13:12:38 -0000
@@ -164,6 +164,7 @@
 
 links:
 	rm -f include/asm; ln -s asm-$(ARCH) include/asm
+	rm -f include/rtai/config.h; cd include/rtai/; ln -s ../config.h config.h
 
 MODVERFILE :=
 
