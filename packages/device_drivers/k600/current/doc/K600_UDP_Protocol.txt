
Het protocol is als volgt:
	unsigned short (2 bytes) : lengte in bytes van het bericht dat volgt
	unsigned short (2 bytes) : type nummer van het bericht (dit is altijd 345 is jullie geval)
	unsigned short (2 bytes) : volgnummer van het bericht
	unsigned short (2 bytes) : volgnummer van het bericht waarop dit bericht een antwoord 				
				is (niet gebruikt in jullie geval)
	unsigned char ( 1 byte)  : 0/1 vlag, die aanduidt of de data die volgt een geldige meting is                                 
De laatste meting die je ontvangt nadat bv de gebruiker in K-Check op stop duwt is een dummy meting, met die vlag op 1.     

	unsigned short (2 bytes) : type nummer van de body van het bericht(dit is altijd 122 in jullie 					
				geval)      
	unsigned short (2 bytes) : cycle number. Dit is het volgnummer van de meting. Dit zou in 					
				jullie geval moeten samen lopen met het volgnummer van het bericht, op 				
				een offset na.
	unsigned short (2 bytes) : aantal markers

	double (8 bytes)         : marker 1, x      
	double (8 bytes)         : marker 1, y      
	double (8 bytes)         : marker 1, z      
	double (8 bytes)         : marker 2, x      
	double (8 bytes)         : marker 2, y     
	double (8 bytes)         : marker 2, z      
	enz...

De byte volgorde is die voor Intel machines (low endian)
Een zwakte van ons protocolleke is dat er geen sync byte of zoiets insteekt. Dus als je je alignering kwijt bent, 
draait het grondig in de soep. Maar dat gebeurt alleen tijdens ontwikkeling...Ik denk dat het niet nuttig is 
om jou ons testprogramma op te sturen, omdat je dan nogal wat code moet meesleuren (error afhandeling, 
code voor run time instantiatie van objecten met de bijhorende object hierarchie enz, dit zijn algauw  een 
vijftigtal files, terwijl je die functionaliteit niet nodig hebt). Ik zal het IP adres en het poortnummer 
waarnaar de UDP datagrammen gestuurd worden in een kleine settingsfile steken die zich op de controller bevindt.
