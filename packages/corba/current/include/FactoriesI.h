// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from 
// be/be_codegen.cpp:844

#ifndef FACTORIESI_H_
#define FACTORIESI_H_

#include "FactoriesS.h"
#include "execution/GlobalMemberFactory.hpp"
#include "execution/GlobalCommandFactory.hpp"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
#pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

class  Orocos_MethodInterface_i : public virtual POA_Orocos::MethodInterface, public virtual PortableServer::RefCountServantBase
{
    ORO_Execution::GlobalMemberFactory* mfact;
public:
  //Constructor 
  Orocos_MethodInterface_i (ORO_Execution::GlobalMemberFactory* mfact);
  
  //Destructor 
  virtual ~Orocos_MethodInterface_i (void);
  
  virtual
  ::Orocos::ObjectList * getObjects (
      
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  virtual
  ::Orocos::MethodList * getMethods (
      const char * obj
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ));
  
  virtual
  ::Orocos::Descriptions * getArguments (
      const char * obj, 
      const char* method
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
      ,Orocos::NoSuchObjectException
      ,Orocos::NoSuchNameException
    ));
  
  virtual
  char * getResultType (
      const char * obj, 
      const char* method
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
      ,Orocos::NoSuchObjectException
      ,Orocos::NoSuchNameException
    ));
  
  virtual
  char * getDescription (
      const char * obj, 
      const char* method
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
      ,Orocos::NoSuchObjectException
      ,Orocos::NoSuchNameException
    ));
  
  virtual
  ::Orocos::Method_ptr createMethod (
      const char * obj,
      const char * method,
      const ::Orocos::Arguments& args
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ,Orocos::NoSuchNameException
    ,Orocos::WrongNumbArgException
    ,Orocos::WrongTypeArgException
    ));

  virtual
  ::Orocos::Method_ptr createMethodAny (
      const char * obj,
      const char * method,
      const ::Orocos::AnyArguments& args
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ,Orocos::NoSuchNameException
    ,Orocos::WrongNumbArgException
    ,Orocos::WrongTypeArgException
    ));
};

class  Orocos_CommandInterface_i : public virtual POA_Orocos::CommandInterface, public virtual PortableServer::RefCountServantBase
{
    ORO_Execution::GlobalCommandFactory* mfact;
public:
  //Constructor 
  Orocos_CommandInterface_i (ORO_Execution::GlobalCommandFactory* fact);
  
  //Destructor 
  virtual ~Orocos_CommandInterface_i (void);
  
  virtual
  ::Orocos::ObjectList * getObjects (
      
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  virtual
  ::Orocos::CommandList * getCommands (
      const char * obj
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ));

  virtual
  ::Orocos::Descriptions * getArguments (
      const char * obj, 
      const char* command
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ,Orocos::NoSuchNameException
    ));
  
  virtual
  char * getResultType (
      const char * obj, 
      const char* command
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ,Orocos::NoSuchNameException
    ));
  
  virtual
  char * getDescription (
      const char * obj, 
      const char* command
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ,Orocos::NoSuchNameException
    ));
  
  virtual
  ::Orocos::Command_ptr createCommand (
      const char * obj,
      const char * command,
      const ::Orocos::Arguments& args
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ,Orocos::NoSuchNameException
    ,Orocos::WrongNumbArgException
    ,Orocos::WrongTypeArgException
    ));
  
  virtual
  ::Orocos::Command_ptr createCommandAny (
      const char * obj,
      const char * command,
      const ::Orocos::AnyArguments& args
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ,Orocos::NoSuchObjectException
    ,Orocos::NoSuchNameException
    ,Orocos::WrongNumbArgException
    ,Orocos::WrongTypeArgException
    ));
};


#endif /* FACTORIESI_H_  */

