
Interfacing to robots is about...

* text and graphical interfaces.

* the notion of commmands, conditions and events to create programs.

* an action (command/event) has one main effect, is the cause of a change
  in the system. It can have multiple side effects, like reporting an error
  back to the user, causing a chain of actions and reactions. A command
  might be interested in the results of these side effects and should
  continue to exist after it has been executed to gather/store results.

* Conversion of human readable text/symbols to a binary program.

* Providing ways to get information back from the system in a controlled
  manner.

* Providing ways to distribute actions over multiple systems.


What is an execution engine ... ?

It is a part of a program that provides infrastructure for processing
logic. It checks conditions and executes actions (events or commands)
which are defined and inserted by the user at runtime.
It has the notion of waiting for results, allowing (or instructing !)
other parts of the system to execute their functionality. Execution
engines can be distributed across systems, it is far from a singleton.
It must be able to interact with other execution engines. An execution
engine keeps track of the (user defined) states of the user defined system. 
It will deny certain actions
in certain states or autonomously execute actions when leaving or
entering states. An execution engine has the notion of deterministic
execution of logic, meaning that some programs can be executed in 
predictable time. To allow this, the execution engine itself will also
have states, which are independent of the states of the program being
executed. These states allow for program 'setup' and program 'execution'.
The former needing non-deterministic time, the latter needing
deterministic time.

Is the execution engine a thread ?
Partially yes, but the question should be is it a server ? A server is
something that waits on a client request and executes an action on
receiving the request to do so. The EE will check periodically for new
requests, which might have been placed in a queue. The request might
cause a complete change of the system. Another server functionality 
of the EE is the request of the client to execute the present logic,
being present in the current system state. This is a unique request
which should be handled separately.

