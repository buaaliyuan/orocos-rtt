Initial_State init
Final_State   homed

state init {
	entry {
		do kernel.selectGenerator("PositionGenerator")
	}
	transitions {
		if GenericSensor.isOn("HomingSwitch_1") then
			select on_switch
		if GenericSensor.isOff("HomingSwitch_1") then
			select off_switch
	}
}

state off_switch {
	entry {
		const double restart_direction = PositionGenerator.restartDirection();

		do PositionGenerator.move(1, 100.0* restart_direction )
	}
	transitions {
		if GenericSensor.isOn("HomingSwitch_1") then
			select wait_on_switch
	}
	exit {
		do PositionGenerator.safestop()
	}
}

state wait_on_switch {
	transitions {
		if PositionGenerator.trajectDone() then
			select on_switch
	}
}

state on_switch {
	entry {
		do PositionGenerator.move(1, 20.0*restart_direction )
	}
	transitions {
		if GenericSensor.isOff("HomingSwitch_1") then
			select callibrate
	}
	exit {
		do PositionGenerator.callibrate()
		do PositionGenerator.safestop()
	}
}

state callibrate {
	transitions {
		if PositionGenerator.trajectDone() then
			select home
	}
}

state home {
	entry {
		do PositionGenerator.home()
	}
	transitions {
		if PositionGenerator.isHomed() then
			select homed
	}
}

state homed {
	entry {
		do console.display("Homing Completed.")
		do 
	}
}